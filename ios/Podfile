require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native/scripts/react_native_pods'

platform :ios, '10.0'

abstract_target 'Hpmerchant' do
  config = use_native_modules!
  use_react_native!(:path => config["reactNativePath"])

# pod 'RNPermissions', :path => '../node_modules/react-native-permissions'
# permissions_path = '../node_modules/react-native-permissions/ios'
# pod 'Permission-Camera', :path => "#{permissions_path}/Camera.podspec"

pod 'react-native-ble-manager', :path => '../node_modules/react-native-ble-manager'

pod 'react-native-ble-plx', :path => '../node_modules/react-native-ble-plx'
pod 'react-native-ble-plx-swift', :path => '../node_modules/react-native-ble-plx'
permissions_path = '../node_modules/react-native-permissions/ios'
pod 'Permission-Camera', :path => "#{permissions_path}/Camera.podspec"

# pod 'SwiftyJSON', '5.0'
# pod 'Charts', '3.3.0'


pod 'RNCharts', :path => '../node_modules/react-native-charts-wrapper'
# pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!({ 'Flipper-Folly' => '2.5.3', 'Flipper' => '0.87.0', 'Flipper-RSocket' => '1.3.1' })
  post_install do |installer|
    flipper_post_install(installer)
    find_and_replace("../node_modules/react-native-spring-scrollview/ios/SpringScrollView/STSpringScrollView.m",
    "\n@interface STSpringScrollView ()", "#import \"RCTEventDispatcher.h\" \n@interface STSpringScrollView ()")
  end
# post_install do |installer|
#    ## Fix for XCode 12.5 beta
  #  find_and_replace("node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
  #  "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")

# end

# react_project = Xcodeproj::Project.open("../node_modules/react-native/React/React.xcodeproj")
#     react_project.main_group["React/Views"].files.each do |file|
#       if file.path.match(/^RCTWebView/)
#         file.remove_from_project
#       end
#     end
# react_project.save

# def find_and_replace(dir, findstr, replacestr)
#   Dir[dir].each do |name|
#       text = File.read(name)
#       replace = text.gsub(findstr,replacestr)
#       if text != replace
#           puts "Fix: " + name
#           File.open(name, "w") { |file| file.puts replace }
#           STDOUT.flush
#       end
#   end
#   Dir[dir + '*/'].each(&method(:find_and_replace))
# end

# -------------- Multi Schema ------------

# target 'Hpmerchant_Production' do

# end
target 'Hpmerchant_Production' do

end

target 'Hpmerchant_Staging' do

end

target 'Hpmerchant_Dev' do

end


end





